plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = "2022.0.4" // Совместимая версия для Spring Boot 3.0.x
}
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
dependencies {

//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'


    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.google.code.gson:gson'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'net.logstash.logback:logstash-logback-encoder:7.4' // или последнюю


//    implementation 'de.siegmar:logback-gelf:3.0.0'
//    implementation 'io.opentracing.contrib:opentracing-spring-jaeger-web-starter:3.0.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'


    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'     // Тестирование
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}